---
const instagramToken = import.meta.env.PUBLIC_INSTAGRAM_ACCESS_TOKEN;
const instagramUserId = import.meta.env.PUBLIC_INSTAGRAM_USER_ID;

// FunciÃ³n para obtener las publicaciones de Instagram
const fetchInstagramPosts = async () => {
  const url = `https://graph.instagram.com/${instagramUserId}/media?fields=id,caption,media_type,media_url,permalink,timestamp&access_token=${instagramToken}`;

  try {
    const response = await fetch(url);
    if (!response.ok) throw new Error('Error al obtener publicaciones');
    const data = await response.json();
    return data.data;
  } catch (error) {
    return { error: error.message };
  }
};

// Llamada a la API para obtener las publicaciones
const posts = await fetchInstagramPosts();
---

<div class="columns-1 sm:columns-2 md:columns-3 gap-4">
  {posts.error ? (
    <div class="error-message">Error al obtener las publicaciones: {posts.error}</div>
  ) : (
    posts.map((post) => (
      <div class="break-inside-avoid mb-4">
        <a href={post.permalink} target="_blank" rel="noopener noreferrer">
          <img 
            src={post.media_url} 
            alt={post.caption || 'Instagram Post'} 
            class="w-full rounded-lg"
            loading="lazy"
          />
        </a>
      </div>
    ))
  )}
</div>